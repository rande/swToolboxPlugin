# Information

The plugin have been splitted into many plugins :

- [swCrossLinkApplicationPlugin](http://www.symfony-project.org/plugins/swCrossLinkApplicationPlugin) : Add cross application link to your project.
- [swFormExtraPlugin](http://www.symfony-project.org/plugins/swFormExtraPlugin) : Add more widgets to sfForm framework
- [swFunctionalTestGenerationPlugin](http://www.symfony-project.org/plugins/swFunctionalTestGenerationPlugin) : Add functional test generation to the web debug toolbar
- [swZendMailPlugin](http://www.symfony-project.org/plugins/swZendMailPlugin) : Restore old symfony (sf1.0) sendMail feature.
- [swFormDynamicPlugin](http://www.symfony-project.org/plugins/swFormDynamicPlugin) (alpha) : Add ajax feature to the sfForm framework
- [swBaseApplicationPlugin](http://www.symfony-project.org/plugins/swBaseApplicationPlugin) (alpha) : Template and menu management for building application (backend or others)


# swBreadcrumb

  Please read [Working with symfony plugins breadcrumb](http://rabaix.net/en/articles/2009/05/16/working-with-symfony-plugins-breadcrumb "Working with symfony plugins breadcrumb")

# swToolboxHelper

## sw_t($title)
  * define the title of the current page
  * custom configuration : edit and add these lines to your app.yml
  
        [yml]
        swToolbox:
          page_title_enabled: true
          page_title_suffix: " - Thomas Rabaix"
        
## sw_insert_google_api

  * small helper to insert google api url
  
        [yml]
        swToolbox:
          api_loader:
            yourhostname:
              google_api_key: your_key_here
              google_map_version: 2.x
              google_map_url: http://maps.google.com/maps
              google_analytics: [ UA-KEY-ONE, UA-KEY-TWO]

  * include google analytics to your web page, edit the layout.php file

        [php]
        <?php echo sw_google_analytics('aga') ?>

    argument values :
      * `urchin` : orginal urchin tracker
      * `ga` : new version of Google Analytics Tracking Code (late 2007)
      * `aga` : load Google Analytics Asynchronous Tracking Code (late 2009)


# swUserContextCacheFilter

This class can replace the default cache handler class. The class always executes an user context action.

Let's take this example with an ecommerce website, you might want to cache the full action, however some parts are user specific.
So you can have a viewProduct action and a viewProduct_UserContext action in your actions.class.php

* viewProduct : execute page related action, get the product and other related information
* viewProduct_UserContext : execute user specific action for the current page, like testing if the product is already in the client's basket.

## Installation

* edit the filters.yml

        [yml]
        cache:
          class: swUserContextCacheFilter
          param:
            condition: on # always set to on